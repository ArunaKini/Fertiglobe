{
	"name": "DF_RZToCZ_Board_Production_ActProductionDetails",
	"properties": {
		"folder": {
			"name": "Production"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Src_RawZone_Prod_ActProductionDetails",
						"type": "DatasetReference"
					},
					"name": "SrcProdActProductionDetails"
				},
				{
					"dataset": {
						"referenceName": "DS_Src_RawZone_DimEntity",
						"type": "DatasetReference"
					},
					"name": "DimEntity"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Snk_Synapase_Prod_Act_Production_Details",
						"type": "DatasetReference"
					},
					"name": "ProdActProdunctionDetails"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Month as integer,",
				"          Entity as string,",
				"          Plant as string,",
				"          Metric as string,",
				"          {ACT - Production Volumes} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     modifiedAfter: (addDays(currentUTC(), -1)),",
				"     modifiedBefore: (currentUTC()),",
				"     wildcardPaths:['Production/Act_Production_Details/*/ACT_PRODUCTION_DETAILS.csv']) ~> SrcProdActProductionDetails",
				"source(output(",
				"          Entity as string,",
				"          {Entity Description} as string,",
				"          OCINVT_IFRS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     modifiedAfter: (addDays(currentUTC(), -1)),",
				"     modifiedBefore: (currentUTC()),",
				"     wildcardPaths:['Finance/Entity/*/ENTITY.csv']) ~> DimEntity",
				"join1 derive(Asset_Utilization = case(Metric == 'PROD_FERT_AU',{ACT - Production Volumes},toDouble(0)),",
				"          Operational_Efficiency = case(Metric == 'PROD_FERT_OE',{ACT - Production Volumes},toDouble(0)),",
				"          Capacity_Efficiency = case(Metric == 'PROD_FERT_CE',{ACT - Production Volumes},toDouble(0)),",
				"          Unplanned_Shutdown_Days = case(Metric == 'PROD_FERT_USD',{ACT - Production Volumes},toDouble(0)),",
				"          Product = reverse(left(reverse(Plant),locate('_',reverse(Plant))-1)),",
				"          Total_Stop_Days = case(Metric == 'PROD_FERT_TOD',{ACT - Production Volumes},toDouble(0)),",
				"          Prod_MPC = case(Metric == 'PROD_FERT_MSD',{ACT - Production Volumes},toDouble(0)),",
				"          Planned_Other_Stop_Days = case(Metric == 'PROD_FERT_PSD',{ACT - Production Volumes},toDouble(0)),",
				"          Planned_Turnaround_Days = case(Metric == 'PROD_FERT_TSD',{ACT - Production Volumes},toDouble(0)),",
				"          ACT_Production_Volumes = case(Metric == 'PROD_FERT_PR',{ACT - Production Volumes},toDouble(0))) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Month,",
				"          Entity = SrcProdActProductionDetails@Entity,",
				"          Product,",
				"          Plant,",
				"          Metric,",
				"          Asset_Utilization,",
				"          Operational_Efficiency,",
				"          Capacity_Efficiency,",
				"          Unplanned_Shutdown_Days,",
				"          Total_Stop_Days,",
				"          ACT_Production_Volumes,",
				"          OpCo = {Entity Description},",
				"          Prod_MPC,",
				"          Planned_Other_Stop_Days,",
				"          Planned_Turnaround_Days",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(Month,",
				"          Entity,",
				"          Product,",
				"          Plant,",
				"          Metric,",
				"          Asset_Utilization,",
				"          Operational_Efficiency,",
				"          Capacity_Efficiency,",
				"          Unplanned_Shutdown_Days,",
				"          Total_Stop_Days,",
				"          ACT_Production_Volumes,",
				"          OpCo,",
				"          Prod_MPC,",
				"          Planned_Other_Stop_Days,",
				"          Planned_Turnaround_Days),",
				"     Cnt = count(1)) ~> aggregate1",
				"SrcProdActProductionDetails, DimEntity join(SrcProdActProductionDetails@Entity == DimEntity@Entity,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Month as integer,",
				"          Entity as string,",
				"          OpCo as string,",
				"          Product as string,",
				"          Plant as string,",
				"          Metric as string,",
				"          Asset_Utilization as decimal(25,3),",
				"          Capacity_Efficiency as decimal(25,3),",
				"          Operational_Efficiency as decimal(25,3),",
				"          Unplanned_Shutdown_Days as decimal(25,3),",
				"          Total_Stop_Days as decimal(25,3),",
				"          Prod_MPC as decimal(25,3),",
				"          ACT_Production_Volumes as decimal(25,3),",
				"          Planned_Other_Stop_Days as decimal(25,3),",
				"          Planned_Turnaround_Days as decimal(25,3)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Month,",
				"          Entity,",
				"          OpCo,",
				"          Product,",
				"          Plant,",
				"          Metric,",
				"          Asset_Utilization,",
				"          Capacity_Efficiency,",
				"          Operational_Efficiency,",
				"          Unplanned_Shutdown_Days,",
				"          Total_Stop_Days,",
				"          ACT_Production_Volumes,",
				"          Prod_MPC,",
				"          Planned_Other_Stop_Days,",
				"          Planned_Turnaround_Days",
				"     )) ~> ProdActProdunctionDetails"
			]
		}
	}
}