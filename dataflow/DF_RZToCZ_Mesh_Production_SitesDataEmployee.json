{
	"name": "DF_RZToCZ_Mesh_Production_SitesDataEmployee",
	"properties": {
		"folder": {
			"name": "Production"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Src_RawZone_Prod_SitesDataEmployee",
						"type": "DatasetReference"
					},
					"name": "SrcRawZoneSiteDetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Snk_Synapse_Prod_SitesDataEmployee",
						"type": "DatasetReference"
					},
					"name": "ConformedSiteDetails"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Company as string,",
				"          Month as string,",
				"          Hours as string,",
				"          Fatility as string,",
				"          LTI as string,",
				"          RWC as string,",
				"          MTC as string,",
				"          LTIR as string,",
				"          TRIR as string,",
				"          LTIR12 as string,",
				"          TRIR12 as string,",
				"          PSI as string,",
				"          PSIR as string,",
				"          PSIR12 as string,",
				"          EI as string,",
				"          EIR as string,",
				"          EIR12 as string,",
				"          {PSI Target} as string,",
				"          {EI Target} as string,",
				"          {LTIR Target} as string,",
				"          {TRIR Target} as string,",
				"          TRI as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     modifiedAfter: (addDays(currentUTC(), -1)),",
				"     modifiedBefore: (currentUTC())) ~> SrcRawZoneSiteDetails",
				"SrcRawZoneSiteDetails aggregate(groupBy(Company,",
				"          Month,",
				"          Hours,",
				"          Fatility,",
				"          LTI,",
				"          RWC,",
				"          MTC,",
				"          LTIR,",
				"          TRIR,",
				"          LTIR12,",
				"          TRIR12,",
				"          PSI,",
				"          PSIR,",
				"          PSIR12,",
				"          EI,",
				"          EIR,",
				"          EIR12,",
				"          {PSI Target},",
				"          {EI Target},",
				"          {LTIR Target},",
				"          {TRIR Target},",
				"          TRI),",
				"     Cnt = count(1)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Company as string,",
				"          Month as string,",
				"          Hours as integer,",
				"          Fatility as decimal(25,3),",
				"          LTI as decimal(25,3),",
				"          RWC as decimal(25,3),",
				"          MTC as decimal(25,3),",
				"          LTIR as decimal(25,3),",
				"          TRIR as decimal(25,3),",
				"          PSI as decimal(25,3),",
				"          PSIR as decimal(25,3),",
				"          EI as decimal(25,3),",
				"          EIR as decimal(25,3),",
				"          LTIR_Target as decimal(25,3),",
				"          TRIR_Target as decimal(25,3),",
				"          PSI_Target as decimal(25,3),",
				"          EI_Target as decimal(25,3)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Company,",
				"          Month,",
				"          Hours,",
				"          Fatility,",
				"          LTI,",
				"          RWC,",
				"          MTC,",
				"          LTIR,",
				"          TRIR,",
				"          PSI,",
				"          PSIR,",
				"          EI,",
				"          EIR,",
				"          LTIR_Target = {LTIR Target},",
				"          TRIR_Target = {TRIR Target},",
				"          PSI_Target = {PSI Target},",
				"          EI_Target = {EI Target}",
				"     )) ~> ConformedSiteDetails"
			]
		}
	}
}