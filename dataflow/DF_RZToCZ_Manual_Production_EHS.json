{
	"name": "DF_RZToCZ_Manual_Production_EHS",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_RawZone_Production_Manual_EHS",
						"type": "DatasetReference"
					},
					"name": "SourceRawHSE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ConformedZone_Production_Manual_EHS",
						"type": "DatasetReference"
					},
					"name": "SnkConformedEHS"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OpCo as string,",
				"          KPIDate as date,",
				"          ValueType as string,",
				"          Site as string,",
				"          Fatalities as double,",
				"          Restricted_work_cases as double,",
				"          Medical_Treatment as double,",
				"          Lost_time_injuries as double,",
				"          TRIR as double,",
				"          LTIR as double,",
				"          PSI as double,",
				"          PSIR as double,",
				"          EI as double,",
				"          EIR as double,",
				"          {Scope 1} as double,",
				"          {Scope 2} as double,",
				"          {Scope 3} as double,",
				"          Offset as double,",
				"          GHG_Reduction as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     modifiedAfter: (addDays(currentUTC(), -1)),",
				"     modifiedBefore: (currentUTC()),",
				"     wildcardPaths:['Production/Manual_File/*/EHS_Template.csv']) ~> SourceRawHSE",
				"SourceRawHSE aggregate(groupBy(OpCo,",
				"          KPIDate,",
				"          ValueType,",
				"          Site,",
				"          Fatalities,",
				"          Restricted_work_cases,",
				"          Medical_Treatment,",
				"          Lost_time_injuries,",
				"          TRIR,",
				"          LTIR,",
				"          PSI,",
				"          PSIR,",
				"          EI,",
				"          EIR,",
				"          {Scope 1},",
				"          {Scope 2},",
				"          {Scope 3},",
				"          Offset,",
				"          GHG_Reduction),",
				"     RwCnt = count(1)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OpCo as string,",
				"          KPIDate as date,",
				"          ValueType as string,",
				"          Site as string,",
				"          Fatalities as decimal(25,8),",
				"          Restricted_work_cases as decimal(25,8),",
				"          Medical_Treatment as decimal(25,8),",
				"          Lost_time_injuries as decimal(25,8),",
				"          TRIR as decimal(25,8),",
				"          LTIR as decimal(25,8),",
				"          PSI as decimal(25,8),",
				"          PSIR as decimal(25,8),",
				"          EI as decimal(25,8),",
				"          EIR as decimal(25,8),",
				"          Scope_1 as decimal(25,8),",
				"          Scope_2 as decimal(25,8),",
				"          Scope_3 as decimal(25,8),",
				"          Offset as decimal(25,8),",
				"          GHG_Reduction as decimal(25,8)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          OpCo,",
				"          KPIDate,",
				"          ValueType,",
				"          Site,",
				"          Fatalities,",
				"          Restricted_work_cases,",
				"          Medical_Treatment,",
				"          Lost_time_injuries,",
				"          TRIR,",
				"          LTIR,",
				"          PSI,",
				"          PSIR,",
				"          EI,",
				"          EIR,",
				"          Scope_1 = {Scope 1},",
				"          Scope_2 = {Scope 2},",
				"          Scope_3 = {Scope 3},",
				"          Offset,",
				"          GHG_Reduction",
				"     )) ~> SnkConformedEHS"
			]
		}
	}
}